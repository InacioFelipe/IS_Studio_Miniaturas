PrincipalView.xaml:
--------------------
<UserControl x:Class="IS_Studio_Miniaturas.Views.PrincipalView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:IS_Studio_Miniaturas.Views"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" x:Name="gridImportarDxf">
            <StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button x:Name="btnImportarDXF"
                    Content="Importar .dxf"
                    MinWidth="130"
                    MaxWidth="150"
                    Margin="5,0,0,5"
                    FontFamily="Arial"
                    FontWeight="Bold"
                    FontSize="14"
                    Click="btnImportarDXF_Click"/>

                    <Button x:Name="btnProcessarDXF"
                    Content="Processar .dxf"
                    MinWidth="130"
                    MaxWidth="150"
                    Margin="5,0,0,5"
                    FontFamily="Arial"
                    FontWeight="Bold"
                    FontSize="14"/>
                </StackPanel>
                <TextBlock x:Name="txtNomeArquivo"
                           Text="Nome do Arquivo Importado"
                           TextWrapping="Wrap"
                           MaxWidth="300"
                           Margin="5,0,5,10"/>
            </StackPanel>
            </Grid>

        <Grid Grid.Row="1" x:Name="gridFormatoPagina">
            <StackPanel HorizontalAlignment="Center">
                <TextBlock Text="Formato da Pagina:" Margin="5,0,5,0"></TextBlock>
                <ComboBox x:Name="cbxFormatoPagina"
                          Margin="5,0,0,10"
                          MinWidth="200" MaxWidth="300"
                          SelectionChanged="CbxFormatoPagina_SelectionChanged">
                </ComboBox>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="2" x:Name="gridFormatoMatriz">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            
            <Grid Grid.Column="0">
                <StackPanel HorizontalAlignment="Center">
                    <TextBlock Text="Colunas:" Margin="5,0,0,2"></TextBlock>
                    <ComboBox x:Name="cbxNumeroColunas" Margin="5,0,0,20" MinWidth="100" MaxWidth="130"></ComboBox>
                </StackPanel>
            </Grid>
            
            <Grid Grid.Column="1">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Text="L:" Margin="0,0,5,0"/>
                        <TextBox x:Name="txtLarguraMiniatura" MinWidth="50" Margin="0,0,5,0"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Text="A:" Margin="5,0,5,0"/>
                        <TextBox x:Name="txtAlturaMiniatura" MinWidth="50" Margin="0,0,10,0"></TextBox>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Grid>
        
        
        <Grid Grid.Row="3" x:Name="gridModeloMiniatura">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid x:Name="gridModeloMiniaturaCabecalho" Grid.Row="0" HorizontalAlignment="Center">
                <TextBlock Text="Construção do Cartão"
                           FontSize="14"
                           FontWeight="Bold"
                           Margin="5,0,0,10"/>
            </Grid>
            
            <Grid x:Name="gridModeloMiniaturaChekers" Grid.Row="1" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" Width="100">
                    <StackPanel  Margin="0,0,0,10">
                        <CheckBox x:Name="chkModelo" Content="Modelo" Margin="5,0,0,5" IsChecked="True"></CheckBox>
                        <CheckBox x:Name="chkNome" Content="Nome" Margin="5,0,0,5" IsChecked="True"></CheckBox>
                        <CheckBox x:Name="chkNumero" Content="Numero" Margin="5,0,0,5" IsChecked="True"></CheckBox>
                        <CheckBox x:Name="chkCodigo" Content="Codigo" Margin="5,0,0,5" IsChecked="True"></CheckBox>
                        </StackPanel>
                </Grid>

                <Grid Grid.Column="1" Width="100">
                    <StackPanel  Margin="0,0,0,10">
                        <CheckBox x:Name="chkPerimetro" Content="Perimetro" Margin="5,0,0,5" IsChecked="True"></CheckBox>
                        <CheckBox x:Name="chkArea" Content="Area" Margin="5,0,0,5" IsChecked="True"></CheckBox>
                        <CheckBox x:Name="chkData" Content="Data" Margin="5,0,0,5" IsChecked="True"></CheckBox>
                        <CheckBox x:Name="chkImagem" Content="Imagem" Margin="5,0,0,0" IsChecked="True"></CheckBox>
                    </StackPanel>
                </Grid>
            </Grid>
            
            <Grid x:Name="gridModeloMiniaturaExample" Grid.Row="2">
                <Border BorderThickness="2" BorderBrush="DarkGray"  Width="200" Height="200">
                    <Grid  Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.Row="0" Grid.Column="0"
                                       x:Name="txtModelo"
                                       Text="Modelo"
                                       HorizontalAlignment="Left"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"
                                       x:Name="txtNome"
                                       Text="Nome"
                                       HorizontalAlignment="Center"/>
                        <TextBlock Grid.Row="0" Grid.Column="3"
                                       x:Name="txtNumero"
                                       Text="Numero"
                                       HorizontalAlignment="Left"/>
                        
                        
                        <Image Grid.Row="1" Grid.ColumnSpan="4"
                               x:Name="imgMiniatura"
                               Source="/IS_Studio_Miniaturas;component/Resources/Logo 300px - Quadrada Borda Transp.png"
                               Stretch="Fill"
                               Margin="5"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>

                        <TextBlock Grid.Row="2" Grid.Column="0"
                                       x:Name="txtPerimetro"
                                       Text="Perimetro"
                                       HorizontalAlignment="Left"/>
                        <TextBlock Grid.Row="2" Grid.Column="1"
                                       x:Name="txtArea"
                                       Text="Area"
                                       HorizontalAlignment="Center"/>
                        <TextBlock Grid.Row="2" Grid.Column="2"
                                       x:Name="txtData"
                                       Text="Data"
                                       HorizontalAlignment="Center"/>
                        <TextBlock Grid.Row="2" Grid.Column="3"
                                       x:Name="txtCodigo"
                                       Text="Codigo"
                                       HorizontalAlignment="Right"/>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
        
        <Grid Grid.Row="4" x:Name="gridExecutar">
            <Button x:Name="btnExecutar"
                Content="Executar"
                MinWidth="200"
                MaxWidth="300"
                Height="30"
                Margin="5,20,5,10"
                FontFamily="Arial"
                FontWeight="Bold"
                FontSize="14" Click="btnExecutar_Click"/>
                
        </Grid>
    </Grid>
</UserControl>


################################################################################################################

PrincipalView.xaml.cs:
-----------------------

using Corel.Interop.VGCore;
using IS_Studio_Miniaturas.Helpers;
using IS_Studio_Miniaturas.ViewModels;
using System;
using System.Collections.Generic;
using System.Windows.Controls;

namespace IS_Studio_Miniaturas.Views
{
    public partial class PrincipalView : UserControl
    {
        private readonly CorelHelper _corelHelper;

        // Construtor
        public PrincipalView()
        {
            InitializeComponent();

            _corelHelper = new CorelHelper();

            PopulateCbxFormatoPagina();
            PopulateCbxColunas();

            // Associa o evento SelectionChanged do ComboBox
            cbxFormatoPagina.SelectionChanged += CbxFormatoPagina_SelectionChanged;
        }

        private void btnImportarDXF_Click(object sender, System.Windows.RoutedEventArgs e)
        {
            // Chama o método para abrir a caixa de diálogo e importar o arquivo DXF
            string filePath = OpenDxfFileDialog();
            if (!string.IsNullOrEmpty(filePath))
            {
                // Importa o arquivo DXF no CorelDRAW
                _corelHelper.ImportDxfFile(filePath);

                // Atualiza o nome do arquivo na interface do usuário
                txtNomeArquivo.Text = $"Arquivo Importado:\n" +
                    $"{System.IO.Path.GetFileName(filePath)}";
            }
        }

        private void btnExecutar_Click(object sender, System.Windows.RoutedEventArgs e)
        {
            if (!_corelHelper.DocExists())
            {
                System.Windows.MessageBox.Show("Nenhum documento aberto no CorelDRAW.", "IS Studio", System.Windows.MessageBoxButton.OK, System.Windows.MessageBoxImage.Warning);
                return;
            }
            

            (double width, double height) = _corelHelper.GetPageSize();

            int col = Convert.ToInt32(cbxNumeroColunas.SelectedItem);

            // obter o numero de pecas na pagina (lista de pecas) e então calcular o numero de linhas = (Nº de peças / Por Col)
            int lin = 5;

            int margemImpressao = 8;

            _corelHelper.CreateMatrix(col, lin, margemImpressao);
        }


        // Metodos auxiliares
        private string OpenDxfFileDialog()
        {
            var openFileDialog = new Microsoft.Win32.OpenFileDialog
            {
                Title = "Selecione um arquivo DXF",
                Filter = "Arquivos DXF (*.dxf)|*.dxf|Todos os arquivos (*.*)|*.*",
                RestoreDirectory = true
            };

            bool? result = openFileDialog.ShowDialog();
            return result == true ? openFileDialog.FileName : null;
        }

        private void PopulateCbxFormatoPagina()
        {
            // Dicionário com os formatos de página e suas dimensões
            Dictionary<string, string> formatosPagina = new Dictionary<string, string>
            {
                { "A4", "210 x 297 mm" },
                { "A3", "297 x 420 mm" }
            };

            // Define os itens do ComboBox
            cbxFormatoPagina.ItemsSource = formatosPagina.Keys;

            // Define o valor padrão (opcional)
            cbxFormatoPagina.SelectedIndex = 0; // Seleciona "A4" como padrão
        }

        private void PopulateCbxColunas()
        {
            List<string> colunas = new List<string>
            {
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10"
            };
            cbxNumeroColunas.ItemsSource = colunas;
            cbxNumeroColunas.SelectedIndex = 2; // Seleciona "3" como padrão
        }

        private void ApllySizesInPageBasedOnSelection()
        {
            string selectedFormat = cbxFormatoPagina.SelectedItem?.ToString();

            if (string.IsNullOrEmpty(selectedFormat))
            {
                throw new InvalidOperationException("Nenhum formato de página selecionado.");
            }

            double largura = 0;
            double altura = 0;

            switch (selectedFormat)
            {
                case "A4":
                    largura = 210;
                    altura = 297;
                    break;

                case "A3":
                    largura = 297;
                    altura = 420;
                    break;

                default:
                    throw new InvalidOperationException("Formato de página inválido.");
            }

            // Aplica tamanhos a página no CorelDRAW usando o CorelHelper
            if (_corelHelper.DocExists())
            {
                _corelHelper.ApplySizesToExistingPage(largura, altura);
            }
        }


        // Metodos reativos a eventos #####################################################################################

        private void CbxFormatoPagina_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            try
            {
                ApllySizesInPageBasedOnSelection();
            }
            catch (Exception ex)
            {
                // Exibe uma mensagem de erro em caso de falha
                System.Windows.MessageBox.Show($"Erro ao aplicar medidas à página: {ex.Message}", "IS Studio", System.Windows.MessageBoxButton.OK, System.Windows.MessageBoxImage.Error);
            }
        }


    }
}



################################################################################################################